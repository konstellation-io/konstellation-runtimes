name: Publish Docker image

on:
  push:
    tags:
      - "*"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      security-events: write
      contents: write
      packages: write
      id-token: write
      attestations: write

    outputs:
      image_base_tag: ${{ steps.tag-folder.outputs.image_base_tag }}
      image_tag: ${{ steps.tag-folder.outputs.image_tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Get image tag and Dockerfile folder
        id: tag-folder
        ## Step variables explanation
        # TAG=py3.9-v1.1.0
        # DOCKERFILE_FOLDER=py3.9
        # IMAGE_BASE_TAG=3.9
        # IMAGE_TAG=1.1.0
        run: |
          TAG=${GITHUB_REF/refs\/tags\//}
          DOCKERFILE_FOLDER=${TAG%-v*}
          IMAGE_BASE_TAG=${DOCKERFILE_FOLDER#py}
          IMAGE_TAG=${TAG##*-v}
          echo "dockerfile_folder=${DOCKERFILE_FOLDER}" >> ${GITHUB_OUTPUT}
          echo "image_base_tag=${IMAGE_BASE_TAG}" >> ${GITHUB_OUTPUT}
          echo "image_tag=${IMAGE_TAG}" >> ${GITHUB_OUTPUT}

      # TODO: when enable Cosign, uncomment this step
      # - name: Install Cosign
      #   uses: sigstore/cosign-installer@v3
      #   with:
      #     cosign-release: "v2.4.1"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to the GHCR registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            konstellation/kdl-py
            ghcr.io/${{ github.repository }}/kdl-py
          flavor: latest=auto
          tags: |
            type=raw,value=${{ steps.tag-folder.outputs.image_base_tag }}
            type=raw,value=${{ steps.tag-folder.outputs.image_base_tag }}-${{ steps.tag-folder.outputs.image_tag }}
          labels: |
            org.opencontainers.image.maintainer=Intelygenz - Konstellation Team
            org.opencontainers.image.title=kdl-py-${{ steps.tag-folder.outputs.image_base_tag }}-${{ steps.tag-folder.outputs.image_tag }}
            org.opencontainers.image.vendor=Konstellation
            org.opencontainers.image.version=${{ steps.tag-folder.outputs.image_base_tag }}-${{ steps.tag-folder.outputs.image_tag }}

      - name: Push to Docker Hub
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          context: ./docker/${{ steps.tag-folder.outputs.dockerfile_folder }}
          file: ./docker/${{ steps.tag-folder.outputs.dockerfile_folder }}/Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          push: true
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Update Docker registry description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          repository: konstellation/kdl-py

      # TODO:
      #  * review cosign
      #  * review grype scan create empty file
      #  * when grype fixes we can uncomment reports
      #
      # - name: Cosign sign and push signature to registry and verify
      #   env:
      #     COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
      #     COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      #   run: |
      #     # sign registry
      #     cosign sign -y --key env://COSIGN_PRIVATE_KEY konstellation/kdl-py@${{ steps.build_and_push.outputs.digest }}
      #     cosign sign -y --key env://COSIGN_PRIVATE_KEY ghcr.io/${{ github.repository }}/kdl-py@${{ steps.build_and_push.outputs.digest }}
      #     # verify
      #     cosign verify --key cosign.pub konstellation/kdl-py@${{ steps.build_and_push.outputs.digest }}
      #     cosign verify --key cosign.pub ghcr.io/${{ github.repository }}/kdl-py@${{ steps.build_and_push.outputs.digest }}

      - name: Get SBOM file
        run:
          docker buildx imagetools inspect konstellation/kdl-py:${{ steps.tag-folder.outputs.image_base_tag }}-${{ steps.tag-folder.outputs.image_tag }} --format "{{ json .SBOM }}" > sbom.spdx.json

      - name: Grype scan SBoM
        id: scan
        uses: anchore/scan-action@v5
        with:
          sbom: sbom.spdx.json
          output-format: sarif
          fail-build: false
          # severity-cutoff: critical

      - name: Attach vulnerabilities scan report asset to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.PAT }}
          file: sbom.spdx.json
          asset_name: sbom.spdx.json
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload vulnerabilities scan report
        uses: github/codeql-action/upload-sarif@v3
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Attach vulnerabilities scan report asset to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.PAT }}
          file: ${{ steps.scan.outputs.sarif }}
          asset_name: vulnerabilities-scan-report.sarif
          tag: ${{ github.ref }}
          overwrite: true
